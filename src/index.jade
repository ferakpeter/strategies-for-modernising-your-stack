doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Strategies for modernising your stack, without going insane

    link(rel='stylesheet', type='text/css', href='build/build.css')

  style.
    .intro {
      background: white url('images/intro-background.jpg') no-repeat;
    }

    .resolvers {
    background: white url('images/graphql-resolvers.png') no-repeat;
    }

    .montyhall {
    background: white url('images/montyhall-problem.png') no-repeat;
    }

    .apolloMonitoring {
    background: white url('images/apollo-monitoring.png') no-repeat;
    }

    .fastchange {
      background: white url('images/changes.jpg') no-repeat;
    }

    .dinosaur {
      background: black url('images/dinosaur.jpg') no-repeat;
    }

    .policies {
      background: white url('images/policies.jpg') no-repeat;
    }

    .guru {
      background: black url('images/guru.jpg') no-repeat;
    }

    .deadline {
      background: black url('images/deadline.jpg') no-repeat;
    }

    .cloudy {
      background: black url('images/cloudy.jpg') no-repeat;
    }

    .lordoftherings {
      background: black url('images/lordoftherings.jpg') no-repeat;
    }

    .watch {
      background: black url('images/watch.jpg') no-repeat;
    }

    .meetup {
      background: black url('images/meetup.jpg') no-repeat;
    }

    .coderetreat {
      background: black url('images/coderetreat.jpg') no-repeat;
    }

    .wardrobe {
      background: black url('images/wardrobe.jpg') no-repeat;
    }

    .beatles {
      background: black url('images/beatles-segway.jpg') no-repeat;
    }

    .fieldwork {
      background: black url('images/fieldwork.jpg') no-repeat;
    }

    .kaggle {
      background: white url('images/kaggle.jpg') no-repeat;
    }

    .bigband {
      background: white url('images/bigband.jpg') no-repeat;
    }

    .islands {
      background: white url('images/islands.jpg') no-repeat;
    }

    .cleanup {
      background: white url('images/cleanup.jpg') no-repeat;
    }

    .communication {
      background: white url('images/communication.jpg') no-repeat;
    }

    .scrumroom {
      background: white url('images/scrumroom.jpg') no-repeat;
    }

    .mainsquare {
      background: white url('images/mainsquare.jpg') no-repeat;
    }

  body

    article

      section
        img.img--top(src='images/codeeurope.svg')
        h2 Reason: You're not my type - but I still want to migrate

        h3
          a(href='https://twitter.com/ferakpeter') @ferakpeter
        table
          td
            img.avatar--small(src='images/clojure-vienna.jpg')
          td
            img.avatar(src='images/profile.png')
          td
            img.avatar--small(src='images/react-vienna.jpg')
        img.avatar--small(src='images/bwin.svg')
        img.img--bottom(src='images/intro-bottom.png')

      section
        img.img--small(src='images/reason.svg')
        br
        h2 Value Proposition
        ul
          li Typesafety (like ELM)
          li Advanced OOP and FP language Features
          li Development Speed
          li "opinionated React"
          li Easy Javascript Interop
          li Made by the makers of React

      section
        img.img(src='images/graphql.png')
        br
        h2 Value Proposition
        ul
          li Type Definitions, not endpoints
          li (Graphs + Query Language)
          li Query optimization
          li Reduced payload

      section
        h2 Graphs
        img.img--large(src='images/graph-db.png')

      section
        h1 Both Technologies come from Facebook

      section
        h2 The Reason Story

      section
        img.avatar.avatar(src='images/jordan-walke.jpg')
        br
        blockquote.
          Reason is like <strong>ES2020</strong>

      section
        img.avatar.avatar(src='images/cheng-lou.jpg')
        br
        blockquote.
          messenger.com is around <strong>50%</strong> converted to Reason

      section
        h2 Language Features

      section
        h2 Types and Variants
        pre
          code.language-javascript.
            type city = Poznan | Warsaw | Other(string);

            type conference = {
              date: string,
              location: city
            };

      section
        h2 Functions And Pattern Matching
        pre
          code.language-javascript.
            let greeting = city =>
              switch (city) {
              | Poznan => "Hello Poznan!"
              | Warsaw => "Na zdrovie Warsaw."
              | Other("Gdansk") => "Do you want to organize codeeurope?"
              | Other(anyOtherName) => "Hey, " ++ anyOtherName ++ "."
              };

      section
        h2 Records and Tuples
        pre
          code.language-javascript.
            let poznan = { date: "June 12th 2018", city: Poznan };
            let {date, city} = poznan;

            let poznanTuple: (int, string) = ("June 12th 2018", Poznan);

      section
        h2 Lists and Arrays
        pre
          code.language-javascript.
            let result = Js.(
              [|1, 2, 3, 4|]
              |> Array.filter(x => x > 2)
              |> Array.mapi((x, i) => x + i)
              |> Array.reduce((x, y) => x + y, 0)
            )

      section
        h2 If, Else, and Loops
        pre
          code.language-javascript.
            let message = if (isMorning) {
              "Good morning!"
            } else {
              "Hello!"
            };

            for (x in a to b) {
              print_int(x);
            };

      section
        h2 Built in JSX in ReasonReact
        pre
          code.language-javascript.
            < MyComponent foo={bar} / >

      section
        h2 Bucklescript compilation
        img.img--medium(src='images/reasonml-architechture.png')

      section
        h2 Formatting and Compiling during development
        img.img--medium(src='images/refmt.gif')

      section
        h2 GraphQL

      section
        h2 Schemas
        pre
          code.language-javascript.
            enum City {
              Poznan,
              Warsaw,
              Other
            }

            type Conference {
              id: ID
              date: String
              location: City
            }

      section
        h2 Resolvers
        pre
          code.language-javascript.
            const ConferenceResolver = {
              Query: {
                  conferences: () => conferences,
                  conference: getConferenceByLocation
              },
          };

      section(data-bespoke-backdrop='resolvers')

      section
        h2 Queries, Mutations, Subscriptions
        pre
          code.language-javascript.
            type Query {
              conference(location: Poznan): Conference
            }

            type Mutation {
              conference(date: "today", location: Poznan): Conference
            }

            type Subscription {
              somethingChanged: {
                subscribe: () => pubsub.asyncIterator(SOMETHING_CHANGED_TOPIC),
              },
            }

      section
        h2 Apollo and Express Stack for NodeJS
        pre
          code.language-javascript.
            import express from'express';
            import bodyParser from 'body-parser';
            import {graphqlExpress, graphiqlExpress} from 'apollo-server-express';

            const app = express();

            // The GraphQL endpoint
            app.use('/graphql', cors(), bodyParser.json(), graphqlExpress({schema}));

            // Start the server
            app.listen(3100, () => {
                console.log('Go to http://localhost:3100/graphiql to run queries!');

      section(data-bespoke-backdrop='apolloMonitoring')

      section
        h1 Both Technologies are early stage but established

      section
        h2 Used by

      section
        h2 Migration Example

      section
        h2 Stack
        ul
          li MongoDB
          li ActionHero
          li React.js

      section
        h2 Target Stack
        ul
          li MongoDB
          li GraphQL
          li ReasonReact

      section(data-bespoke-backdrop="montyhall")

      section
        h2 Hosting Meetup communities
        table
          td
            img.avatar.avatar(src='images/react-vienna.jpg')
          td
            img.avatar.avatar(src='images/viennajs.jpg')
          td
            img.avatar.avatar(src='images/clojure-vienna.jpg')

      section
        img.img--top(src='images/codeeurope.svg')
        h1 Thank you!
        h3
          a(href='https://twitter.com/ferakpeter') @ferakpeter
        img.avatar.avatar(src='images/profile.png')
        img.img--bottom(src='images/intro-bottom.png')

      script(src='build/build.js')